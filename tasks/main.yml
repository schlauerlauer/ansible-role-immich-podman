---
# tasks file for ansible-role-immich-podman

- name: "Create directories"
  file:
    path: "{{ item }}"
    state: "directory"
  loop:
    - "{{ base_dir }}/immich"
    - "{{ base_dir }}/immich/model_cache"
    - "{{ base_dir }}/immich/pg_data"
    - "{{ base_dir }}/immich/typesense"

- name: "Copy immich env"
  template:
    force: yes
    src: "immich.env.j2"
    dest: "{{ base_dir }}/immich/immich.env"

- name: "Create immich pod"
  containers.podman.podman_pod:
    name: "immich-pod"
    state: "created"
    infra_name: "immich-infra"
    recreate: no
    ports:
      - "2283:3000" # web
      - "2284:3001" # server

- name: "Immich redis"
  containers.podman.podman_container:
    pod: "immich-pod"
    name: "immich-redis"
    image: "docker.io/library/redis:6.2.12-alpine3.18"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"

- name: "Immich typesense"
  containers.podman.podman_container:
    pod: "immich-pod"
    name: "immich-typesense"
    image: "docker.io/typesense/typesense:0.24.1"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"
    env:
      TYPESENSE_API_KEY: "{{ typesense_api_key }}"
      TYPESENSE_DATA_DIR: "/data"
    volumes:
      - "{{ base_dir }}/immich/typesense:/data:Z"

- name: "Immich postgres"
  containers.podman.podman_container:
    pod: "immich-pod"
    name: "immich-postgres"
    image: "docker.io/library/postgres:15.2-alpine3.17"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"
    env_file: "{{ base_dir}}/immich/immich.env"
    env:
      POSTGRES_PASSWORD: "{{ postgres_password }}"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - "{{ base_dir}}/immich/pg_data:/var/lib/postgresql/data:rw,Z"

- name: "Immich server"
  containers.podman.podman_container:
    pod: "immich-pod"
    name: "immich-server"
    image: "ghcr.io/immich-app/immich-server:{{ version_tag }}"
    recreate: no
    restart_policy: "no"
    rm: no
    tty: no
    detach: yes
    state: "started"
    command:
      - "start.sh"
      - "immich"
    volumes:
      - "{{ data_base_dir}}:/usr/src/app/upload:z"
      - "{{ data_encoded_videos_dir }}:/usr/src/app/upload/encoded-video:z"
      - "{{ data_profile_dir }}:/usr/src/app/upload/profile:z"
      - "{{ data_thumbs_dir }}:/usr/src/app/upload/thumbs:z"
      - "{{ data_library_dir }}:/usr/src/app/upload/library:z"
    env_file: "{{ base_dir }}/immich/immich.env"
    env:
      NODE_ENV: "production"

- name: "Immich microservices"
  containers.podman.podman_container:
    pod: "immich-pod"
    name: "immich-microservices"
    image: "ghcr.io/immich-app/immich-server:{{ version_tag }}"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"
    command:
      - "start.sh"
      - "microservices"
    volumes:
      - "{{ data_base_dir}}:/usr/src/app/upload:z"
      - "{{ data_encoded_videos_dir }}:/usr/src/app/upload/encoded-video:z"
      - "{{ data_profile_dir }}:/usr/src/app/upload/profile:z"
      - "{{ data_thumbs_dir }}:/usr/src/app/upload/thumbs:z"
      - "{{ data_library_dir }}:/usr/src/app/upload/library:z"
    env_file: "{{ base_dir }}/immich/immich.env"
    env:
      NODE_ENV: "production"

- name: "Immich web"
  containers.podman.podman_container:
    pod: "immich-pod"
    name: "immich-web"
    image: "ghcr.io/immich-app/immich-web:{{ version_tag }}"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"
    env_file: "{{ base_dir }}/immich/immich.env"

- name: "Immich machine learning"
  containers.podman.podman_container:
    pod: "immich-pod"
    name: "immich-machine-learning"
    image: "ghcr.io/immich-app/immich-machine-learning:{{ version_tag }}"
    recreate: no
    restart_policy: "no"
    tty: no
    detach: yes
    state: "started"
    env_file: "{{ base_dir }}/immich/immich.env"
    env:
      NODE_ENV: "production"
    volumes:
      - "{{ base_dir }}/immich/model_cache:/cache:Z"

# - name: "Immich proxy"
#   containers.podman.podman_container:
#     pod: "immich-pod"
#     name: "immich-proxy"
#     image: "ghcr.io/immich-app/immich-proxy:{{ version_tag }}"
#     recreate: no
#     restart_policy: "no"
#     tty: no
#     detach: yes
#     state: "started"
#     command: "/bin/sh ./entrypoint.sh"
#     env:
#       IMMICH_SERVER_URL: "http://127.0.0.1"
#       IMMICH_WEB_URL: "http://127.0.0.1"
